{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  @media only screen and (min-width: 320px) and (max-width: 767px) {
    .section-{{ section.id }}-padding {
      padding-top: 0 !important;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }}">
  <div class="page-width mobileFullWidth">
    <div class="image-with-text  isolate{% if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0 %} collapse-borders{% endif %}{% unless section.settings.color_scheme == section.settings.section_color_scheme and settings.media_border_thickness > 0 and settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0 %} collapse-corners{% endunless %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      <div class="image-with-text__grid grid {% if section.settings.layout == 'text_first' %} image-with-text__grid--reverse{% endif %}">
        <div class="image-with-text__flex " style="flex-direction: column;">
          <h4>{{ section.settings.header }}</h4>
          <div class="splide" aria-label="Splide Basic HTML Example">
            <div class="splide__track">
              <ul class="splide__list">
                {%- for block in section.blocks -%}
                  {% case block.type %}
                    {%- when 'text' -%}
                      <li
                        class="splide__slide"
                        style="display: flex; align-items: center; justify-content: center; flex-direction: column;"
                      >
                        <img
                          src="{{ block.settings.image | image_url }}"
                          width=""
                          height=""
                          style="height: auto; width: 30%; border-radius: 15px; transition: min-height 0.5s ease;"
                        >
                        <p style="height: 0;transition: opacity 0.5s ease; opacity: 0;">
                          {{ block.settings.text }}
                        </p>
                      </li>
                  {%- endcase -%}
                {%- endfor -%}
              </ul>
            </div>
          </div>
          {% comment %}
            <div class="slider">
              <div class="track">
                {%- for block in section.blocks -%}
                  {% case block.type %}
                    {%- when 'text' -%}
                      <div
                        {% comment %} style="{{cursor: index == 0 || index == 2 ? 'pointer' : '', display: index == 0 || index == 2 || index == 1 ? '' : 'none'}}" {% endcomment %}
                        class="slide"
                      >
                        <img
                          src="{{  block.settings.image | image_url }}"
                          alt=""
                          width=""
                          height=""
                        >
                      </div>
                  {%- endcase -%}
                {%- endfor -%}
              </div>
              <div class="track">
                {%- for block in section.blocks -%}
                  {% case block.type %}
                    {%- when 'text' -%}
                      <div class="textSlide">
                        <p id="{{ block.id }}">{{ block.settings.text }}</p>
                      </div>
                  {%- endcase -%}
                {%- endfor -%}
              </div>
            </div>
          {% endcomment %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var splide = new Splide('.splide', {
      type: 'loop',
      focus: 'center',
      perPage: 3,
      {% comment %} autoplay: true, {% endcomment %}
      pagination: false,
      slideFocus: true,
      640: {
        perPage: 3,
        fixedHeight : '350',
      },
      480: {
        perPage: 3,
        fixedHeight : '350',
        arrows: false
      },
    });
    splide.mount();

    const activeLi = document.querySelector('.splide__slide.is-active');

    console.log(activeLi)


    {% comment %} const slider = document.querySelector('.slider'); {% endcomment %}
    const slides = document.querySelectorAll('.slide');
    const textSlides = document.querySelectorAll('.textSlide');

    let currentSlideIndex = 0;
    const lastIndex = slides.length - 1;

    function updateSlides() {
      slides.forEach(function (slide, index) {
        if (index === currentSlideIndex || index === currentSlideIndex + 1 || index === currentSlideIndex + 2) {
          slide.style.display = '';
        } else {
          slide.style.display = 'none';
        }
        if (index === currentSlideIndex) {
          slide.style.minHeight = '200px';
        }
        if (index === currentSlideIndex + 1 || index === currentSlideIndex + 2) {
          slide.style.minHeight = '150px';
        }
      });

      textSlides.forEach(function (textSlide, index) {
        if (index === currentSlideIndex) {
          textSlide.style.display = '';
        } else {
          textSlide.style.display = 'none';
        }
      });
    }

    function handleSwipe(direction) {
      if (direction === 'left') {
        currentSlideIndex = currentSlideIndex === 0 ? lastIndex - 2 : currentSlideIndex - 1;
      } else if (direction === 'right') {
        currentSlideIndex = currentSlideIndex === lastIndex - 2 ? 0 : currentSlideIndex + 1;
      }

      updateSlides();
      resetTimer();
    }

    function startTimer() {
      return setInterval(function () {
        handleSwipe('right');
      }, 3000);
    }

    let timer = startTimer();

    function resetTimer() {
      clearInterval(timer);
      timer = startTimer();
    }

    // Initial setup
    updateSlides();

    // Event listeners for left and right buttons
    // Left button
    const leftButton = document.querySelector('.leftButton');
    leftButton.addEventListener('click', function () {
      handleSwipe('left');
    });

    // Right button
    const rightButton = document.querySelector('.rightButton');
    rightButton.addEventListener('click', function () {
      handleSwipe('right');
    });
  });
</script>
{% schema %}
{
  "name": "Testimonial",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "richtext",
      "id": "header",
      "default": "<p>Section Header </p>",
      "label": "t:sections.image-with-text.blocks.text.settings.text.label"
    },
    {
      "type": "color_scheme",
      "id": "section_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.multirow.settings.container_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.animation.content"
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "text",
      "name": "t:sections.image-with-text.blocks.text.name",
      "limit": 5,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Testimonial Text",
          "default": "Testimonial quote here"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.image-with-text.settings.image.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonial",
      "blocks": [
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}
